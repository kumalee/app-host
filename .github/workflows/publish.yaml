name: publish

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # v1.0.0

jobs:
  publish:
    name: publish
    runs-on: ubuntu-latest

    outputs:
      name: ${{ steps.package_info.outputs.name }}
      version: ${{ steps.package_info.outputs.version }}

    steps:
      - name: pull code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.EL_ECR_PUSHER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.EL_ECR_PUSHER_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 479788333518

      - name: package information
        id: package_info
        uses: ./.github/actions/package_info
      
      - name: docker information
        id: docker_info
        uses: ./.github/actions/docker_info
        with:
          aws_registry: ${{ steps.login-ecr.outputs.registry }}
          owner: ${{ steps.package_info.outputs.owner }}
          namespace: ${{ steps.package_info.outputs.namespace }}
          name: ${{ steps.package_info.outputs.name }}
          version: ${{ steps.package_info.outputs.version }}

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: docker build
        env:
          DOCKER_REGISTRY_GITHUB: ${{ steps.docker_info.outputs.docker_registry_github }}
          DOCKER_REGISTRY_AWS: ${{ steps.docker_info.outputs.docker_registry_aws }}
        run: |
          docker login docker.pkg.github.com -u ${{ secrets.EL_B2C_BOT_USERNAME }} -p ${{ secrets.EL_B2C_BOT_TOKEN_PACKAGE_WRITER }}
          docker build --load --tag ${DOCKER_REGISTRY_GITHUB} --tag ${DOCKER_REGISTRY_AWS} --build-arg APP_NAME=${{ steps.package_info.outputs.name }} --build-arg NODE_AUTH_TOKEN=${{ secrets.EL_B2C_BOT_TOKEN_PACKAGE_WRITER }} -f Dockerfile .
          docker image ls

      - name: docker push
        env:
          DOCKER_REGISTRY_GITHUB: ${{ steps.docker_info.outputs.docker_registry_github }}
          DOCKER_REGISTRY_AWS: ${{ steps.docker_info.outputs.docker_registry_aws }}
        run: |
          docker push ${DOCKER_REGISTRY_GITHUB}
          docker push ${DOCKER_REGISTRY_AWS}

  push-to-china:
    name: push-to-china
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: publish to china
        continue-on-error: true # allow fail
        run: |
          curl -vvv https://api.github.com/repos/efcloud/${{ needs.publish.outputs.name }}/actions/workflows/ecr-cn.yaml/dispatches \
           --request POST \
           -H 'Content-Type: application/json' \
           -H "Authorization: Bearer ${{ secrets.EL_B2C_BOT_TOKEN }}" \
           -H 'Accept: application/vnd.github.v3+json' \
           --data-binary '{"ref":"v${{ needs.publish.outputs.version }}"}'

  promote:
    name: promote
    runs-on: ubuntu-latest

    needs: publish
    if: ${{ !contains(github.ref, 'SNAPSHOT') }}

    steps:
      - name: trigger update of terraform scripts
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.EL_B2C_BOT_TOKEN }}
          repository: efcloud/el-environments-deployer
          event-type: promote-package-version
          client-payload: '{ "repository": "${{ github.repository }}", "images": [{"name":"${{ needs.publish.outputs.name }}", "version":"${{ needs.publish.outputs.version }}"}]}'
